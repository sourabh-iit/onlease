{"version":3,"sources":["./src/lodging/services/lodging.service.ts","./src/lodging/components/home/home.component.ts","./src/lodging/components/home/home.component.html","./src/lodging/services/lodging-resolver.service.ts","./src/lodging/components/address-choice/address-choice.component.ts","./src/lodging/components/address-choice/address-choice.component.html","./src/lodging/lodging-routing.module.ts","./src/lodging/lodging.module.ts","./src/lodging/components/edit/edit.component.ts","./src/lodging/components/edit/edit.component.html","./src/lodging/components/agreements-choice/agreements-choice.component.ts","./src/lodging/components/agreements-choice/agreements-choice.component.html","./src/lodging/components/image/image.component.ts","./src/lodging/components/image/image.component.html","./src/lodging/components/details/details.component.ts","./src/lodging/components/details/details.component.html"],"names":[],"mappings":"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","file":"lodging-lodging-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n\n@Injectable()\nexport class LodgingService {\n\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  validateTourLink(link: string) {\n    return this.http.post('/api/lodging/tour-link/validate', {link});\n  }\n\n  create(data: Lodging) {\n    return this.http.post('/api/lodging/create', data);\n  }\n\n  update(data: Lodging) {\n    return this.http.put(`/api/lodging/${data.id}`, data);\n  }\n\n  uploadLodgingImage(data: any) {\n    return this.http.post('/api/lodging/images', data);\n  }\n\n  loadLodging(lodgingId: string|number) {\n    return this.http.get(`/api/lodging/${lodgingId}`);\n  }\n\n  deleteLodgingImage(imageId: string|number) {\n    return this.http.delete(`/api/lodging/images/${imageId}`);\n  }\n\n  updateImageTag(imageId: any, data: any) {\n    return this.http.put(`/api/lodging/images/${imageId}`, data);\n  }\n\n  uploadLodgingVRImage(data: any) {\n    return this.http.post('/api/lodging/vrimages', data, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  deleteLodgingVRImage(imageId: string|number) {\n    return this.http.delete(`/api/lodging/vrimages/${imageId}`);\n  }\n\n  loadLodgings(regions: string[]) {\n    let params = new HttpParams();\n    for(let region of regions) {\n      params.set(\"regions\", region);\n    }\n    return this.http.get('/api/lodging/list', {params});\n  }\n\n  confirmVaccant(lodgingId: any) {\n    let url = `/api/lodging/${lodgingId}/twilio/confirm-vaccancy`;\n    return this.http.post(url, {});\n  }\n\n  bookLodging(lodgingId: any) {\n    let url = `/api/transactions/lodging/${lodgingId}/create`;\n    return this.http.post(url, {});\n  }\n\n  getAllCharges(lodgingId: any) {\n    const url = `/api/lodging/charges/${lodgingId}`;\n    return this.http.get(url);\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\nimport { LodgingService } from \"src/lodging/services/lodging.service\";\n\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  private subs = new Subscription();\n  public selectedRegions = [];\n  public lodgings = [];\n  public loading = false;\n  public hasNextPage = true;\n\n  constructor(\n    private lodgingService: LodgingService,\n    private route: ActivatedRoute\n  ){\n  }\n\n  ngOnInit() {\n    this.loadLodgings();\n  }\n\n  loadLodgings() {\n    this.loading = true;\n    this.subs.add(this.lodgingService.loadLodgings(this.selectedRegions).subscribe((res: any) => {\n      this.lodgings = res.data;\n      this.loading = false;\n      this.hasNextPage = res.has_next_page;\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}","<div class=\"lodgings-container\">\n  <ng-container *ngIf=\"!loading\">\n    <app-lodging-card *ngFor=\"let lodging of lodgings\" [lodging]=\"lodging\"></app-lodging-card>\n  </ng-container>\n  <div *ngIf=\"loading\" class=\"w-100 mt-5 d-flex justify-content-center\">\n    <mat-spinner></mat-spinner>\n  </div>\n  <ng-container *ngIf=\"lodgings.length == 0 && !loading\">\n    <div class=\"no-ad\">\n      <fa-icon [icon]=\"['fas', 'times-circle']\" style=\"color: red;\"></fa-icon> No ad match your search criteria</div>\n  </ng-container>\n</div>","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\nimport { LodgingService } from \"./lodging.service\";\n\n\n@Injectable()\nexport class LodgingResolver implements Resolve<any> {\n  constructor(\n    private lodgingService: LodgingService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const lodgingId = route.paramMap.get('lodgingId')!;\n    return this.lodgingService.loadLodging(lodgingId);\n  }\n}","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\n\n\nexport interface DialogData {\n    addresses?: Address[];\n  }\n\n@Component({\n    templateUrl: './address-choice.component.html',\n    styleUrls: ['./address-choice.component.scss']\n})\nexport class AddressChoiceComponent {\n    public selectedAddress = '';\n    \n    constructor(\n        public dialogRef: MatDialogRef<AddressChoiceComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData,\n        private router: Router\n    ) {\n        \n    }\n\n    newAddress() {\n        this.router.navigateByUrl('/user/address/-1');\n        this.dialogRef.close();\n    }\n}","<div>\n    <h2 class=\"heading\">\n        <div>Select Address</div>\n        <button type=\"button\" mat-mini-fab color=\"accent\" (click)=\"newAddress()\">\n            <fa-icon [icon]=\"['fas', 'plus']\"></fa-icon>\n        </button>\n    </h2>\n    <mat-radio-group [(ngModel)]=\"selectedAddress\">\n        <ng-container *ngFor=\"let address of data.addresses\">\n            <mat-radio-button class=\"address\" [value]=\"address.id\">\n                <mat-card>{{address.text}} - {{address.region.name}} ({{address.region.state.name}})</mat-card>\n            </mat-radio-button>\n        </ng-container>\n    </mat-radio-group>\n    <div style=\"text-align: center;\" class=\"mt-3\">\n        <button mat-raised-button color=\"accent\"\n            [disabled]=\"selectedAddress == ''\"\n            (click)=\"dialogRef.close(selectedAddress)\"\n        >Select</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LodgingDetailsComponent } from './components/details/details.component';\n\nimport { EditLodgingComponent } from './components/edit/edit.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LodgingResolver } from './services/lodging-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: 'edit/:lodgingId',\n    component: EditLodgingComponent\n  }, {\n    path: 'details/:lodgingId',\n    component: LodgingDetailsComponent,\n    resolve: {\n      lodging: LodgingResolver\n    }\n  }, {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LodgingRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {IvyCarouselModule} from 'angular-responsive-carousel';\n\n\nimport { SharedModule } from '../shared/shared.module';\nimport { LodgingRoutingModule } from './lodging-routing.module';\n\nimport { EditLodgingComponent } from './components/edit/edit.component';\nimport { LodgingService } from './services/lodging.service';\nimport { LodgingImageComponent } from './components/image/image.component';\nimport { GlobalErrorHandler } from 'src/app/services/error-handler.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HomeComponent } from './components/home/home.component';\nimport { LodgingDetailsComponent } from './components/details/details.component';\nimport { LodgingResolver } from './services/lodging-resolver.service';\nimport { AgreementChoiceComponent } from './components/agreements-choice/agreements-choice.component';\nimport { AddressChoiceComponent } from './components/address-choice/address-choice.component';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'DD/MM/YYYY',\n    monthYearLabel: 'YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'YYYY',\n  },\n};\n\n@NgModule({\n  declarations: [\n    EditLodgingComponent,\n    LodgingImageComponent,\n    HomeComponent,\n    LodgingDetailsComponent,\n    AgreementChoiceComponent,\n    AddressChoiceComponent\n  ],\n  imports: [\n    ReactiveFormsModule,\n    SharedModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatRadioModule,\n    FontAwesomeModule,\n    MatDialogModule,\n    MatCardModule,\n    MatTooltipModule,\n    LodgingRoutingModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    MatProgressSpinnerModule,\n    IvyCarouselModule,\n    MatProgressBarModule,\n    MatCheckboxModule\n  ],\n  providers: [\n    LodgingService,\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n    { provide: HTTP_INTERCEPTORS, useClass: GlobalErrorHandler, multi: true },\n    LodgingResolver\n  ],\n  entryComponents: [\n    LodgingImageComponent,\n    AgreementChoiceComponent,\n    AddressChoiceComponent\n  ]\n})\nexport class LodgingModule { }\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LodgingService } from 'src/lodging/services/lodging.service';\nimport { finalize } from 'rxjs/operators';\nimport { LodgingImageComponent } from '../image/image.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as moment from 'moment';\nimport { ToasterService } from 'src/app/services/toaster.service';\nimport { ConstantsService } from 'src/app/services/constants.service';\nimport { HttpEventType } from '@angular/common/http';\nimport { UserService } from 'src/app/services/user.service';\nimport { AgreementChoiceComponent } from '../agreements-choice/agreements-choice.component';\nimport { AddressChoiceComponent } from '../address-choice/address-choice.component';\n\nexport const crossFieldValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const lodgingTypeControl = control.get('lodging_type')!;\n  const lodgingTypeOtherControl = control.get('lodging_type_other')!;\n  const flooringControl = control.get('flooring')!;\n  const flooringOtherControl = control.get('flooring_other')!;\n  const isBookedControl = control.get('is_booked')!;\n  const availableFromControl = control.get('available_from')!;\n\n  if(lodgingTypeControl.value == '4' && lodgingTypeOtherControl.value == '') {\n    lodgingTypeOtherControl.setErrors({required: true});\n  } else {\n    lodgingTypeOtherControl.setErrors(null);\n  }\n  if(flooringControl.value == '10' && flooringOtherControl.value == '') {\n    flooringOtherControl.setErrors({required: true});\n  } else {\n    flooringOtherControl.setErrors(null);\n  }\n  if(isBookedControl.value == true && availableFromControl.value == '') {\n    availableFromControl.setErrors({required: true});\n  } else {\n    availableFromControl.setErrors(null);\n  }\n\n  return null;\n};\n\n@Component({\n  selector: 'app-edit-lodging',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditLodgingComponent implements OnInit, OnDestroy {\n  public subs = new Subscription();\n  public lodgingForm: any;\n  public user: any = {};\n  public lodgingId = -1;\n  public lodging: any = {};\n  public images: LodgingImage[] = [];\n\n  public validatingLink = false;\n\n  public lodgingTypes: any;\n  public totalfloorOptions: any = [];\n  public floorNumOptions: any = [];\n  public furnishingOptions: any = [];\n  public facilityOptions: any = [];\n  public areaUnitOptions: any = [];\n  public flooringOptions: any = [];\n\n  public agreements: Agreement[] = [];\n  public selectedAgreement: Agreement|null = null;\n\n  public addresses: Address[] = [];\n  public selectedAddress: Address|null = null;\n\n  public vrImages: any = [];\n  public uploadingVRImages: any = [];\n  @ViewChild('fileUpload') fileUpload!: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private lodgingService: LodgingService,\n    private dialog: MatDialog,\n    private toastr: ToasterService,\n    private constantsService: ConstantsService,\n    private router: Router,\n    private userService: UserService,\n    private modalService: MatDialog\n  ) {\n    this.subs.add(this.route.params.subscribe(params => {\n      this.lodgingForm = this.createLodgingForm();\n      this.images = [];\n      this.lodgingId = parseInt(params['lodgingId']);\n      if(this.lodgingId > 0) {\n        this.loadLodging();\n      } else {\n        const localData = this.retrieveForm();\n        if(localData != null) {\n          this.populateForm(localData);\n        }\n        this.subs.add(this.lodgingForm.valueChanges.subscribe(() => this.saveForm()));\n      }\n    }));\n  }\n\n  ngOnInit() {\n    this.furnishingOptions = this.constantsService.furnishingTypes;\n    this.facilityOptions = this.constantsService.facilities;\n    this.areaUnitOptions = this.constantsService.areaUnitOptions;\n    this.flooringOptions = this.constantsService.flooringOptions;\n    this.subs.add(this.lodgingForm.get('total_floors')!.valueChanges.subscribe((val: any) => {\n      let totalFloors = parseInt(val);\n      this.floorNumOptions = [];\n      for(let i=0; i<totalFloors; i++) {\n        this.floorNumOptions.push({text: i+1, value: i+1});\n      }\n    }));\n    for(let i=0; i<20; i++) {\n      this.totalfloorOptions.push({text: i+1, value: i+1});\n    }\n    this.subs.add(this.lodgingForm.get('virtual_tour_link')!.valueChanges.subscribe((val: string) => {\n      this.validateTourLink(val);\n    }));\n    this.lodgingTypes = this.constantsService.lodgingTypes;\n    this.loadAgreements();\n    this.loadAddresses();\n  }\n\n  private createLodgingForm() {\n    return this.fb.group({\n      address_id: ['', [Validators.required]],\n      lodging_type: ['3', [Validators.required]],\n      lodging_type_other: [''],\n      total_floors: ['', [Validators.required]],\n      floor_no: ['', [Validators.required]],\n      furnishing: ['1', [Validators.required]],\n      facilities: [[]],\n      rent: ['', [Validators.required, Validators.pattern(/^[1-9][0-9]*$/)]],\n      area: ['', [Validators.required, Validators.pattern(/^[1-9][0-9]*$/)]],\n      unit: ['0', [Validators.required]],\n      bathrooms: ['1', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\n      rooms: ['1', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\n      balconies: ['0', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\n      halls: ['0', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\n      advance_rent_of_months: ['1', [Validators.required, Validators.pattern(/^[1-9][0-9]*$/)]],\n      flooring: ['5', [Validators.required]],\n      flooring_other: [''],\n      additional_details: [''],\n      is_booked: [false, [Validators.required]],\n      available_from: [''],\n      latlng: [''],\n      virtual_tour_link: [''],\n      agreement_id: [''],\n      charges: this.fb.array([])\n    }, { validator: crossFieldValidator});\n  }\n\n  get charges() {\n    return this.lodgingForm.get('charges') as FormArray;\n  }\n\n  addNewCharge() {\n    this.charges.push(this.fb.group({\n      amount: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      is_per_month: [false],\n    }));\n  }\n\n  loadAgreements() {\n    this.subs.add(this.userService.loadAgreements().subscribe((agreements: any) => {\n      this.agreements = agreements;\n      this.selectAgreement();\n    }));\n  }\n\n  loadAddresses() {\n    this.subs.add(this.userService.loadAddresses().subscribe((addresses: any) => {\n      this.addresses = addresses;\n      this.selectAddress();\n    }));\n  }\n\n  selectAgreement() {\n    const agreementId = this.lodgingForm.get('agreement_id').value;\n    if(agreementId != '' && this.agreements.length > 0) {\n      const index = this.agreements.findIndex((agreement: Agreement) => agreement.id == agreementId);\n      if(index > -1) {\n        this.selectedAgreement = this.agreements[index];\n      } else {\n        this.lodgingForm.get('agreement_id').setValue('');\n      }\n    }\n  }\n\n  selectAddress() {\n    const addressId = this.lodgingForm.get('address_id').value;\n    if(addressId != '' && this.addresses.length > 0) {\n      const index = this.addresses.findIndex((address: Address) => address.id == addressId);\n      if(index > -1) {\n        this.selectedAddress = this.addresses[index];\n      } else {\n        this.lodgingForm.get('address_id').setValue('');\n      }\n    }\n  }\n\n  deselectAgreement() {\n    this.lodgingForm.get('address_id').setValue('');\n    this.selectedAgreement = null;\n  }\n\n  deselectAddress() {\n    this.lodgingForm.get('address_id').setValue('');\n    this.selectedAddress = null;\n  }\n\n  getAgreementById(agreementId: number) {\n    return this.agreements.find((agreement: Agreement) => agreement.id == agreementId);\n  }\n\n  getAddressById(addressId: number) {\n    return this.addresses.find((address: Address) => address.id == addressId);\n  }\n\n  chooseAgreement() {\n    const modalRef = this.modalService.open(AgreementChoiceComponent, {\n      data: {\n        agreements: this.agreements\n      },\n      panelClass: 'agreement-dialog'\n    });\n    modalRef.afterClosed().subscribe((agreementId: number) => {\n      if(agreementId) {\n        this.selectedAgreement = this.agreements.find((a: Agreement) => a.id == agreementId)!;\n        this.lodgingForm.get('agreement_id').setValue(agreementId);\n        this.saveForm();\n      }\n    });\n  }\n\n  chooseAddress() {\n    const modalRef = this.modalService.open(AddressChoiceComponent, {\n      data: {\n        addresses: this.addresses\n      },\n      panelClass: 'address-dialog'\n    });\n    modalRef.afterClosed().subscribe((addressId: number) => {\n      if(addressId) {\n        this.selectedAddress = this.addresses.find((a: Address) => a.id == addressId)!;\n        this.lodgingForm.get('address_id').setValue(addressId);\n        this.saveForm();\n      }\n    });\n  }\n\n  removeCharge(index: number) {\n    this.charges.removeAt(index);\n  }\n\n  get tomorrow() {\n    return new Date(Date.now()+24*60*60*1000);\n  }\n\n  get tourLinkControl() {\n    return this.lodgingForm.get('virtual_tour_link')!;\n  }\n\n  private validateTourLink(link: string) {\n    if(link == '') {\n      this.tourLinkControl.setErrors(null);\n      return;\n    }\n    this.validatingLink = true;\n    this.subs.add(this.lodgingService.validateTourLink(link).pipe(\n      finalize(() => this.validatingLink = false)\n    ).subscribe((data: any) => {\n      this.validatingLink = false;\n      if(!data.is_valid) {\n        this.tourLinkControl.setErrors({invalid: true});\n      } else {\n        this.tourLinkControl.setErrors(null);\n      }\n    }, () => {\n      this.tourLinkControl.setErrors({invalid: true});\n    }));\n  }\n\n  addNewImage() {\n    const dialogRef = this.dialog.open(LodgingImageComponent, {disableClose: true});\n    dialogRef.afterClosed().subscribe(data => {\n      if(data) {\n        this.images.push(data);\n        this.saveForm();\n      }\n    });\n  }\n\n  onFileAdded(event: any) {\n    let file;\n    for(file of event.target.files) {\n      let uploadVRImage = {src: '', percent: 0};\n      let formData = new FormData();\n      formData.append('image', file);\n      const reader = new FileReader();\n      reader.onload = e => {\n        uploadVRImage.src = <string> reader.result;\n        this.uploadingVRImages.push(uploadVRImage);\n      }\n      reader.readAsDataURL(file);\n      this.subs.add(this.lodgingService.uploadLodgingVRImage(formData).subscribe((resp: any) => {\n        if (resp.type === HttpEventType.Response) {\n          if(this.uploadingVRImages.filter((im: any) => im.percent < 100).length == 0) {\n            this.uploadingVRImages = [];\n          }\n          this.vrImages.push(resp.body);\n          this.saveForm();\n        }\n        if (resp.type === HttpEventType.UploadProgress) {\n          uploadVRImage.percent = Math.round(100 * resp.loaded / resp.total);\n        }\n      }));\n    }\n    this.fileUpload.nativeElement.value = '';\n  }\n\n  filterUploadedImages(images: any) {\n    return images.filter((im: any) => im.percent < 100);\n  }\n\n  removeVRImage(image: LodgingVRImage) {\n    // TODO: confirm popup\n    this.lodgingService.deleteLodgingVRImage(image.id).subscribe(() => {\n      this.vrImages = this.vrImages.filter((im: any) => im.id != image.id);\n      this.saveForm();\n    });\n  }\n\n  downloadVRImage(image: LodgingVRImage) {\n\n  }\n\n  getFileName(link: string) {\n    const arr = link.split('/');\n    return arr[arr.length-1];\n  }\n\n  editImage(image: any) {\n    const dialogRef = this.dialog.open(LodgingImageComponent, {\n      disableClose: true,\n      data: image\n    });\n    dialogRef.afterClosed().subscribe(data => {\n      if(data) {\n        const index = this.images.findIndex(im => im.id == image.id);\n        this.images[index] = data;\n        this.saveForm();\n      }\n    });\n  }\n\n  removeLodgingImage(image: LodgingImage) {\n    // TODO: confirm popup\n    this.lodgingService.deleteLodgingImage(image.id).subscribe(() => {\n      this.images = this.images.filter((im: any) => im.id != image.id);\n      this.saveForm();\n    });\n  }\n\n  tagText(image: any) {\n    let tag = \"Unknown\";\n    const tagId = image.tag;\n    const index = this.constantsService.tags.findIndex((tag: any) => tag.value == tagId);\n    if(index > -1) {\n      tag = this.constantsService.tags[index].text;\n      if(tag == 'Other') {\n        tag = image.tag_other;\n      }\n    }\n    return tag;\n  }\n\n  loadLodging() {\n    this.subs.add(this.lodgingService.loadLodging(this.lodgingId).subscribe((data: any) => {\n      if(data.agreement_id == null) {\n        data.agreement_id = '';\n      } else {\n        data.agreement_id = data.agreement_id.toString();\n      }\n      if(data.address_id == null) {\n        data.address_id = '';\n      } else {\n        data.address_id = data.address_id.toString();\n      }\n      this.populateForm(data);\n    }));\n  }\n\n  saveLodging() {\n    const data = this.createSaveData();\n    if(data.agreement_id == '') {\n      delete data.agreement_id;\n    }\n    if(data.address_id == '') {\n      delete data.address_id;\n    }\n    data.images = data.images.map((image: any) => image.id);\n    data.vrimages = data.vrimages.map((image: any) => image.id);\n    data.id = this.lodgingId;\n    if(this.lodgingId > 0) {\n      this.subs.add(this.lodgingService.update(data).subscribe(() => {\n        this.toastr.success('Success!', 'Ad updated');\n      }));\n    } else {\n      this.subs.add(this.lodgingService.create(data).subscribe(() => {\n        this.deleteForm();\n        this.router.navigateByUrl('/user/me/ads');\n      }));\n    }\n  }\n\n  createSaveData() {\n    const data = Object.assign({}, this.lodgingForm.value);\n    data.images = this.images;\n    data.vrimages = this.vrImages;\n    data.facilities = JSON.stringify(data.facilities);\n    if(data.available_from == \"\") {\n      delete data.available_from;\n    } else {\n      data.available_from = data.available_from.format('YYYY-MM-DD');\n    }\n    return data;\n  }\n\n  populateForm(data: Lodging) {\n    this.images = data.images;\n    this.vrImages = data.vrimages ? data.vrimages : [];\n    data.available_from = data.available_from == null ? \"\" : moment(data.available_from, \"YYYY-MM-DD\");\n    data.facilities = JSON.parse(data.facilities);\n    for(let charge of data.charges) {\n      this.addNewCharge();\n      this.charges.controls[this.charges.length-1].patchValue(charge);\n    }\n    this.lodgingForm.patchValue(data);\n    this.lodgingForm.patchValue({ region_temp: data.region });\n    this.selectAgreement();\n    this.selectAddress();\n  }\n\n  deleteForm() {\n    localStorage.removeItem('lodging-form-data');\n  }\n\n  saveForm() {\n    const data = this.createSaveData();\n    localStorage.setItem(\"lodging-form-data\", JSON.stringify(data));\n  }\n\n  retrieveForm() {\n    const data = localStorage.getItem(\"lodging-form-data\");\n    if(data != null) {\n      return JSON.parse(data);\n    }\n    return null;\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}","<form class=\"lodging-form mb-5\" (ngSubmit)=\"saveLodging()\" [formGroup]=\"lodgingForm\">\n  <h2 *ngIf=\"lodgingId == -1\">New Ad</h2>\n  <h2 *ngIf=\"lodgingId != -1\">Edit Ad</h2>\n  <mat-slide-toggle class=\"mb-2\" formControlName=\"is_booked\">Is booked?</mat-slide-toggle>\n  <mat-form-field (click)=\"picker.open()\" *ngIf=\"lodgingForm.get('is_booked')!.value\" appearance=\"fill\">\n    <mat-label>Available from</mat-label>\n    <input placeholder=\"MM/DD/YYYY\" formControlName=\"available_from\" readonly [min]=\"tomorrow\" matInput [matDatepicker]=\"picker\">\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n  </mat-form-field>\n  <div style=\"display: flex;\">\n    <mat-form-field class=\"w-100\">\n      <mat-label>Property type</mat-label>\n      <mat-select formControlName=\"lodging_type\" required>\n        <mat-option *ngFor=\"let lodgingType of lodgingTypes\" [value]=\"lodgingType.value\">\n          {{lodgingType.text}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"w-100 ml-2\" *ngIf=\"lodgingForm.get('lodging_type')?.value == '4'\">\n      <mat-label>Other value</mat-label>\n      <input matInput type=\"text\" placeholder=\"Other value\" formControlName=\"lodging_type_other\">\n    </mat-form-field>\n  </div>\n  <div style=\"display: flex;\">\n    <mat-form-field class=\"w-100\">\n      <mat-label>Total floors</mat-label>\n      <mat-select formControlName=\"total_floors\" required>\n        <mat-option *ngFor=\"let floor of totalfloorOptions\" [value]=\"floor.value\">\n          {{floor.text}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"w-100 ml-2\" required>\n      <mat-label>Floor number</mat-label>\n      <mat-select required formControlName=\"floor_no\">\n        <mat-option *ngFor=\"let floor of floorNumOptions\" [value]=\"floor.value\">\n          {{floor.text}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n  <mat-form-field class=\"w-100\">\n    <mat-label>Furnishing</mat-label>\n    <mat-select formControlName=\"furnishing\" required>\n      <mat-option *ngFor=\"let furnishing of furnishingOptions\" [value]=\"furnishing.value\">\n        {{furnishing.text}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field class=\"w-100\">\n    <mat-label>Facilities available</mat-label>\n    <mat-select formControlName=\"facilities\" multiple>\n      <mat-option *ngFor=\"let facility of facilityOptions\" [value]=\"facility.value\">\n        {{facility.text}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <div class=\"d-flex\">\n    <mat-form-field>\n      <mat-label>Rent per month</mat-label>\n      <input matInput required type=\"text\" formControlName=\"rent\">\n      <mat-error *ngIf=\"lodgingForm.get('rent')!.hasError('pattern')\">\n        Invalid value\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"w-100 ml-2\">\n      <mat-label>Rent of months in advance</mat-label>\n      <input matInput required type=\"text\" formControlName=\"advance_rent_of_months\">\n    </mat-form-field>\n  </div>\n  <div style=\"display: flex;\">\n    <mat-form-field class=\"w-100\">\n      <mat-label>Area of property (total)</mat-label>\n      <input matInput required type=\"text\" formControlName=\"area\">\n    </mat-form-field>\n    <mat-form-field class=\"w-100\" style=\"max-width: 100px;\">\n      <mat-select required formControlName=\"unit\">\n        <mat-option *ngFor=\"let unit of areaUnitOptions\" [value]=\"unit.value\">\n          {{unit.text}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n  <div style=\"display: flex;\">\n    <mat-form-field class=\"w-100\">\n      <mat-label>Number of rooms</mat-label>\n      <input required matInput type=\"text\" formControlName=\"rooms\">\n    </mat-form-field>\n    <mat-form-field class=\"w-100 ml-2\">\n      <mat-label>Number of bathrooms</mat-label>\n      <input required matInput type=\"text\" formControlName=\"bathrooms\">\n    </mat-form-field>\n  </div>\n  <div style=\"display: flex;\">\n    <mat-form-field class=\"w-100\">\n      <mat-label>Number of balconies</mat-label>\n      <input matInput required type=\"text\" formControlName=\"balconies\">\n    </mat-form-field>\n    <mat-form-field class=\"w-100 ml-2\">\n      <mat-label>Number of halls</mat-label>\n      <input matInput required type=\"text\" formControlName=\"halls\">\n    </mat-form-field>\n  </div>\n  <div style=\"display: flex;\">\n    <mat-form-field class=\"w-100\">\n      <mat-label>Flooring</mat-label>\n      <mat-select required formControlName=\"flooring\">\n        <mat-option *ngFor=\"let flooring of flooringOptions\" [value]=\"flooring.value\">\n          {{flooring.text}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"w-100 ml-2\" *ngIf=\"lodgingForm.get('flooring')?.value == '10'\">\n      <mat-label>Other vaue</mat-label>\n      <input matInput type=\"text\" formControlName=\"flooring_other\">\n    </mat-form-field>\n  </div>\n  <div class=\"images-container\">\n    <div class=\"header\">\n      <span class=\"font-weight-bold\">Images:</span>\n      <button type=\"button\" mat-mini-fab color=\"accent\" (click)=\"addNewImage()\">\n        <fa-icon [icon]=\"['fas', 'plus']\"></fa-icon>\n      </button>\n    </div>\n    <div *ngIf=\"images.length == 0\" style=\"text-align: center; color: gray;\">No image to display</div>\n    <div class=\"image mt-2\" *ngFor=\"let image of images\">\n      <div class=\"image-continer\">\n        <div style=\"text-align: center; color: gray;\">{{tagText(image)}}</div>\n        <img class=\"mr-2\" [src]=\"image.image_thumbnail\">\n      </div>\n      <div class=\"actions ml-2\">\n        <button type=\"button\" mat-mini-fab color=\"accent\" (click)=\"editImage(image)\">\n          <fa-icon [icon]=\"['fas', 'pencil-alt']\"></fa-icon>\n        </button>\n        <button type=\"button\" class=\"ml-2\" (click)=\"removeLodgingImage(image)\" mat-mini-fab color=\"warn\">\n          <fa-icon [icon]=\"['fas', 'trash']\"></fa-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"images-container mt-2\">\n    <div class=\"header\">\n      <span class=\"font-weight-bold\">360&deg; Images:</span>\n      <button type=\"button\" mat-mini-fab color=\"accent\" (click)=\"fileUpload.click()\">\n        <fa-icon [icon]=\"['fas', 'plus']\"></fa-icon>\n      </button>\n      <input [hidden]=\"true\" type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\"\n        id=\"file\" #fileUpload (change)=\"onFileAdded($event)\" multiple>\n    </div>\n    <div *ngIf=\"vrImages.length == 0\" style=\"text-align: center; color: gray;\">No image to display</div>\n    <div class=\"upload-progress-container\">\n      <div *ngFor=\"let im of filterUploadedImages(uploadingVRImages)\" class=\"image-progress\">\n        <img [src]=\"im.src\" height=\"30\" width=\"30\" class=\"mr-2\">\n        <mat-progress-bar mode=\"determinate\" [value]=\"im.percent\"></mat-progress-bar>\n      </div>\n    </div>\n    <div class=\"image mt-2\" *ngFor=\"let image of vrImages\">\n      <div class=\"image-continer\">\n        <img class=\"mr-2\" [src]=\"image.image_thumbnail\">\n      </div>\n      <div class=\"actions ml-2\">\n        <a class=\"ml-2\" mat-mini-fab color=\"primary\" [href]=\"image.image\" [download]=\"getFileName(image.image)\">\n          <fa-icon [icon]=\"['fas', 'download']\"></fa-icon>\n        </a>\n        <button type=\"button\" class=\"ml-2\" (click)=\"removeVRImage(image)\" mat-mini-fab color=\"warn\">\n          <fa-icon [icon]=\"['fas', 'trash']\"></fa-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"images-container mt-2 mb-2\" formArrayName=\"charges\">\n    <div class=\"header\">\n      <span class=\"font-weight-bold\">Additional charges:</span>\n      <button type=\"button\" mat-mini-fab color=\"accent\" (click)=\"addNewCharge()\">\n        <fa-icon [icon]=\"['fas', 'plus']\"></fa-icon>\n      </button>\n    </div>\n    <div *ngIf=\"charges.length == 0\" style=\"text-align: center; color: gray;\">None added yet</div>\n    <div class=\"image mt-2\" *ngFor=\"let charge of charges.controls; let i=index\">\n      <div class=\"container\" style=\"background: beige; padding: 5px; margin-bottom: 10px;\" [formGroupName]=\"i\">\n        <div class=\"row\">\n          <mat-form-field class=\"col-6\">\n            <mat-label>Amount</mat-label>\n            <input type=\"text\" required matInput placeholder=\"Amount\" formControlName=\"amount\">\n          </mat-form-field>\n          <mat-form-field class=\"col-6\">\n            <mat-select formControlName=\"is_per_month\">\n              <mat-option [value]=\"false\">One time only</mat-option>\n              <mat-option [value]=\"true\">Every month</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"row\">\n          <mat-form-field class=\"col-10\">\n            <mat-label>Description</mat-label>\n            <input type=\"text\" matInput required placeholder=\"Description\" formControlName=\"description\">\n          </mat-form-field>\n          <div class=\"col-2\">\n            <button type=\"button\" (click)=\"removeCharge(i)\" mat-mini-fab color=\"warn\">\n              <fa-icon [icon]=\"['fas', 'trash']\"></fa-icon>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <mat-form-field>\n    <mat-label>Additional Details</mat-label>\n    <textarea matInput formControlName=\"additional_details\" rows=\"4\"></textarea>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Virtual tour link</mat-label>\n    <input matInput formControlName=\"virtual_tour_link\">\n    <mat-error *ngIf=\"lodgingForm.get('virtual_tour_link')!.hasError('invalid')\">\n      Invalid link\n    </mat-error>\n    <fa-icon [icon]=\"['fas', 'spinner']\" [spin]=\"true\" *ngIf=\"validatingLink\" matSuffix></fa-icon>\n  </mat-form-field>\n  <div class=\"images-container mt-2 mb-2\">\n    <h4 style=\"display: flex; justify-content: space-between;\">\n      <span>Agreement:</span>\n      <button type=\"button\" (click)=\"chooseAgreement()\" mat-mini-fab color=\"accent\">\n        <fa-icon [icon]=\"['fas', 'pencil-alt']\"></fa-icon>\n      </button>\n    </h4>\n    <div class=\"d-flex\">\n      <div style=\"color: gray; text-align: center;\" *ngIf=\"lodgingForm.get('agreement_id').value == ''\">\n        None selected</div>\n      <div *ngIf=\"lodgingForm.get('agreement_id').value != ''\">\n        <mat-accordion multi>\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                {{selectedAgreement?.title}}\n              </mat-panel-title>\n              <mat-panel-description>\n                <fa-icon style=\"color: red;\" (click)=\"deselectAgreement()\" class=\"ml-3\" [icon]=\"['fas', 'times-circle']\"></fa-icon>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n      \n            <mat-list role=\"list\">\n              <mat-list-item role=\"listitem\" *ngFor=\"let point of selectedAgreement?.points\">{{point.text}}</mat-list-item>\n            </mat-list>\n      \n          </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n    </div>\n  </div>\n  <div class=\"images-container mt-2 mb-2\">\n    <h4 style=\"display: flex; justify-content: space-between;\">\n      <span>Address:</span>\n      <button type=\"button\" (click)=\"chooseAddress()\" mat-mini-fab color=\"accent\">\n        <fa-icon [icon]=\"['fas', 'pencil-alt']\"></fa-icon>\n      </button>\n    </h4>\n    <div class=\"d-flex\">\n      <div style=\"color: gray; text-align: center;\" *ngIf=\"lodgingForm.get('address_id').value == ''\">\n        None selected</div>\n      <div *ngIf=\"lodgingForm.get('address_id').value != ''\">\n        <mat-card class=\"row d-flex m-0\">\n          <div class=\"col-9 p-0\">{{selectedAddress?.text}} - {{selectedAddress?.region?.name}} ({{selectedAddress?.region?.state?.name}})</div>\n          <fa-icon (click)=\"deselectAddress()\"\n            style=\"text-align: right; color: red; cursor: pointer;\"\n            class=\"col-3 p-0\" [icon]=\"['fas', 'times-circle']\"></fa-icon>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" mat-raised-button color=\"accent\" class=\"mt-2\"\n    [disabled]=\"!lodgingForm.valid || validatingLink\">Save</button>\n</form>\n","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\n\n\nexport interface DialogData {\n    agreements?: Agreement[];\n  }\n\n@Component({\n    templateUrl: './agreements-choice.component.html',\n    styleUrls: ['./agreements-choice.component.scss']\n})\nexport class AgreementChoiceComponent {\n    public selectedAgreement = '';\n    \n    constructor(\n        public dialogRef: MatDialogRef<AgreementChoiceComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData,\n        private router: Router\n    ) {\n        \n    }\n\n    newAgreement() {\n        this.router.navigateByUrl('/user/agreements/-1');\n        this.dialogRef.close();\n    }\n}","<div>\n    <h2 class=\"heading\">\n        <div>Select Agreement</div>\n        <button type=\"button\" mat-mini-fab color=\"accent\" (click)=\"newAgreement()\">\n            <fa-icon [icon]=\"['fas', 'plus']\"></fa-icon>\n        </button>\n    </h2>\n    <mat-radio-group [(ngModel)]=\"selectedAgreement\">\n        <ng-container *ngFor=\"let agreement of data.agreements\">\n            <mat-radio-button class=\"agreement\" [value]=\"agreement.id\">\n                <mat-accordion>\n                    <mat-expansion-panel>\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                {{agreement?.title}}\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                            <mat-list role=\"list\">\n                                <mat-list-item role=\"listitem\" *ngFor=\"let point of agreement?.points\">{{point.text}}</mat-list-item>\n                            </mat-list>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </mat-radio-button>\n        </ng-container>\n    </mat-radio-group>\n    <div style=\"text-align: center;\" class=\"mt-3\">\n        <button mat-raised-button color=\"accent\"\n            [disabled]=\"selectedAgreement == ''\"\n            (click)=\"dialogRef.close(selectedAgreement)\"\n        >Select</button>\n    </div>\n</div>","import { Component, ElementRef, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { ConstantsService } from 'src/app/services/constants.service';\nimport { LodgingService } from 'src/lodging/services/lodging.service';\n\nexport const tagValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const tag = control.get('tag');\n  const tag_other = control.get('tag_other');\n\n  if(tag && tag_other && tag.value == '11' && tag_other.value == '') {\n    tag_other.setErrors({required: true});\n  } else {\n    tag_other!.setErrors(null);\n  }\n  return null;\n};\n\n@Component({\n  selector: 'app-lodging-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class LodgingImageComponent implements OnInit, OnDestroy {\n  public subs = new Subscription();\n  public tags: any = [];\n  public imageForm = this.fb.group({\n    tag: ['', [Validators.required]],\n    tag_other: ['']\n  }, {validators: tagValidator});\n  public formData = new FormData();\n  public imageSrc: string | ArrayBuffer | null = \"\";\n\n  @ViewChild('fileUpload') fileUpload: ElementRef;\n\n  constructor(\n    public dialogRef: MatDialogRef<LodgingImageComponent>,\n    private lodgingService: LodgingService,\n    private constantsService: ConstantsService,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: LodgingImage\n  ) {\n  }\n\n  ngOnInit() {\n    if(this.data == null) {\n      this.imageForm.addControl('url', this.fb.control(['', [Validators.required]]));\n    } else {\n      this.imageForm.patchValue(this.data);\n    }\n    this.tags = this.constantsService.tags;\n  }\n\n  onFileAdded(event: any) {\n    const file = event.target.files[0];\n    this.formData.append('image', file);\n    const reader = new FileReader();\n    reader.onload = e => this.imageSrc = reader.result;\n    reader.readAsDataURL(file);\n  }\n\n  saveImage() {\n    this.formData.append('tag', this.imageForm.get('tag')!.value);\n    this.formData.append('tag_other', this.imageForm.get('tag_other')!.value);\n    if(this.data) {\n      this.subs.add(this.lodgingService.updateImageTag(this.data.id, this.formData).subscribe((data: any) => {\n        this.dialogRef.close(data);\n      }));\n    } else {\n      this.subs.add(this.lodgingService.uploadLodgingImage(this.formData).subscribe((data) => {\n        this.dialogRef.close(data);\n      }));\n    }\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}","<form [formGroup]=\"imageForm\" class=\"image-form\" (ngSubmit)=\"saveImage()\">\n    <h1 *ngIf=\"!data\" mat-dialog-title>New property image</h1>\n    <h1 *ngIf=\"data\" mat-dialog-title>Edit property image</h1>\n    <div mat-dialog-content>\n        <p *ngIf=\"!data\">\n            <img class=\"lodging-image mr-2\" [src]=\"imageSrc\">\n            <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"fileUpload.click()\">Upload image</button>\n            <input [hidden]=\"true\" type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\"\n              id=\"file\" #fileUpload formControlName=\"url\" (change)=\"onFileAdded($event)\">\n        </p>\n        <p *ngIf=\"data\">\n            <img [src]=\"data.image_thumbnail\">\n        </p>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Choose image tag</mat-label>\n            <mat-select required formControlName=\"tag\">\n                <ng-container *ngFor=\"let tag of tags\">\n                    <mat-option [value]=\"tag.value\">{{tag.text}}</mat-option>\n                </ng-container>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"ml-2\" *ngIf=\"imageForm.get('tag')?.value == '11'\" appearance=\"fill\">\n            <mat-label>Other value</mat-label>\n            <input required matInput formControlName=\"tag_other\">\n        </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"accent\" [disabled]=\"!imageForm.valid\">\n            <ng-container *ngIf=\"!data\">Add</ng-container>\n            <ng-container *ngIf=\"data\">Save</ng-container>\n        </button>\n        <button type=\"button\" mat-button (click)=\"dialogRef.close(null)\" cdkFocusInitial>Cancel</button>\n    </div>\n</form>","import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\n\nimport { ConstantsService } from 'src/app/services/constants.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { ToasterService } from 'src/app/services/toaster.service';\nimport { LodgingService } from 'src/lodging/services/lodging.service';\nimport { environment } from 'src/environments/environment';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-lodging-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class LodgingDetailsComponent implements OnDestroy {\n  public lodging: any;\n  public subs = new Subscription();\n  public me: User;\n  public isFavorite = false;\n  public env: any = {};\n  public isLoggedIn = false;\n  public tourLink: SafeResourceUrl;\n  @ViewChild('carousel') carousel: any;\n  private prevButton: any = null;\n  private nextButton: any = null;\n  public currImage = 0;\n  public charges: any[] = [];\n  public bookingAmt = 0;\n  public brokerage = 0;\n  public advanceRent = 0;\n  public agreeToTandC = false;\n  public agreementError = '';\n\n  constructor(\n    private userService: UserService,\n    private constantsService: ConstantsService,\n    private toasterService: ToasterService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private lodgingService: LodgingService,\n    private sanitizer: DomSanitizer\n  ) {\n    this.subs.add(userService.isLoggedIn$.subscribe((res) => {\n      this.isLoggedIn = res;\n    }));\n    this.subs.add(this.route.data.subscribe((data) => {\n      this.lodging = data.lodging;\n    }));\n    this.subs.add(this.userService.user$.subscribe((user: any) => {\n      this.me = user;\n      this.setIsFavorite();\n    }));\n    this.subs.add(lodgingService.getAllCharges(this.lodging.id).subscribe((res: any) => {\n      this.charges = res.charges;\n      this.bookingAmt = res.bookingAmount;\n      this.brokerage = res.brokerage;\n      this.advanceRent = res.advanceRent;\n    }));\n    this.env = environment;\n    this.tourLink = this.sanitizer.bypassSecurityTrustResourceUrl(this.lodging.virtual_tour_link);\n  }\n\n  ngAfterViewInit() {\n    const elem = this.carousel.elementRef.nativeElement;\n    this.prevButton = elem.getElementsByClassName('.carousel-arrow-prev')[0];\n    this.nextButton = elem.getElementsByClassName('.carousel-arrow-next')[0];\n    this.prevButton.addEventListener('click', () => {\n      if(this.currImage > 0) {\n        this.currImage -= 1;\n      }\n    });\n    this.nextButton.addEventListener('click', () => {\n      if(this.currImage < this.lodging.images.length - 1) {\n        this.currImage += 1;\n      }\n    });\n  }\n\n  tagText(image: any) {\n    let tag = \"Unknown\";\n    const tagId = image.tag;\n    const index = this.constantsService.tags.findIndex((tag: any) => tag.value == tagId);\n    if(index > -1) {\n      tag = this.constantsService.tags[index].text;\n      if(tag == 'Other') {\n        tag = image.tag_other;\n      }\n    }\n    return tag;\n  }\n\n  get type() {\n    const type = this.constantsService.lodgingTypes.find((t: any) => t.value == this.lodging.lodging_type)!;\n    if(type.value == '4') {\n      return this.lodging.lodging_type_other;\n    }\n    return type.text;\n  }\n\n  get furnishing() {\n    const type = this.constantsService.furnishingTypes.find((t: any) => t.value == this.lodging.furnishing)!;\n    return type!.text;\n  }\n\n  get flooring() {\n    const type = this.constantsService.flooringOptions.find((t: any) => t.value == this.lodging.flooring)!;\n    if(type.value == '4') {\n      return this.lodging.flooring_other;\n    }\n    return type.text;\n  }\n\n  get areaUnit() {\n    let index = this.constantsService.areaUnitOptions.findIndex(option => option.value == this.lodging.unit);\n    if(index < 0) {\n      index = 1;\n    }\n    return this.constantsService.areaUnitOptions[index].text;\n  }\n\n  get phoneNumbers() {\n    let numbers: any[] = [];\n    if(this.lodging.posted_by) {\n      numbers = Array.from(this.lodging.posted_by.mobile_numbers);\n      numbers.push(this.lodging.posted_by.mobile_number);\n    }\n    return numbers.join(', ');\n  }\n  \n  get oneMonthRent() {\n    return this.charges.filter((charge: any) => charge.is_per_month).reduce((acc: number, currVal: any) => acc + parseInt(currVal.amount), 0);\n  }\n\n  get firstMonthRent() {\n    return this.charges.reduce((acc: number, currVal: any) => acc + parseInt(currVal.amount), 0);\n  }\n\n  get needToConfirm() {\n    const last_confirmed = moment(this.lodging.last_confirmed);\n    return moment.duration(moment().diff(last_confirmed)).asHours() >= 24;\n  }\n\n  setIsFavorite() {\n    if(this.lodging) {\n      if(this.me.favorites && this.me.favorites.indexOf(this.lodging.id) > -1) {\n        this.isFavorite = true;\n      } else {\n        this.isFavorite = false;\n      }\n    }\n  }\n\n  favorite() {\n    let addToFavorites = true;\n    if(this.me.favorites.indexOf(this.lodging.id) > -1) {\n      addToFavorites = false;\n    }\n    this.subs.add(this.userService.toggleFavorite(this.lodging.id).subscribe(() => {\n      if(addToFavorites) {\n        this.toasterService.success('Success', 'Added to favorites');\n      } else {\n        this.toasterService.success('Success', 'Removed from favorites');\n      }\n    }));\n  }\n\n  confirmVaccant() {\n    this.subs.add(this.lodgingService.confirmVaccant(this.lodging.id).subscribe(() => {\n      this.toasterService.success('Success', 'We have placed the request. We will shortly sen an sms with owner\\'s response');\n    }));\n  }\n\n  onAgreementChange(val: boolean) {\n    if(val) {\n      this.agreementError = '';\n    }\n  }\n\n  bookLodging() {\n    if(!this.agreeToTandC) {\n      this.agreementError = \"Accept owner terms and conditions\";\n      return;\n    }\n    this.subs.add(this.lodgingService.bookLodging(this.lodging.id).subscribe((resp: any) => {\n      window.open(resp.url);\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","<div class=\"row p-1 p-md-5 pt-2\">\n  <div class=\"col-12 col-md-8\">\n    <div class=\"box mb-4\" *ngIf=\"lodging.virtual_tour_link != ''\">\n      <iframe class=\"ku-embed\" frameborder=\"0\" scrolling=\"no\"\n        allowfullscreen allow=\"xr-spatial-tracking; gyroscope; accelerometer\" \n        [src]=\"tourLink\"\n      ></iframe>\n    </div>\n    <div class=\"box\">\n      <div class=\"content\">\n        <div style=\"position: absolute; top: 20px; color: gray; font-weight: bold;\">{{tagText(lodging.images[currImage])}}</div>\n        <carousel #carousel arrowsTheme=\"dark\" cellWidth=\"100%\" [dots]=\"true\" [height]=\"400\" [arrowsOutside]=\"true\">\n          <ng-container *ngFor=\"let image of lodging.images\">\n            <div class=\"carousel-cell\">\n              <img [src]=\"image.image\" alt=\"\">\n            </div>\n          </ng-container>\n        </carousel>\n      </div>\n    </div>\n    <div class=\"box mt-4 p-3\">\n      <h2><fa-icon [icon]=\"['fas', 'info-circle']\" class=\"mr-2\"></fa-icon> Details</h2>\n      <div class=\"row container\">\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Location:</span>\n          <span class=\"value\">{{lodging.region.name}} ({{lodging.region.state.name}})</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Floor:</span>\n          <span class=\"value\"><b>{{lodging.floor_no}}</b> out of <b>{{lodging.total_floors}}</b> floors</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Area:</span>\n          <span class=\"value\">{{lodging.area}} {{areaUnit}}</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Type:</span>\n          <span class=\"value\">{{type}}</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Furnishing:</span>\n          <span class=\"value\">{{furnishing}}</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Bathrooms:</span>\n          <span class=\"value\">{{lodging.bathrooms}}</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Rooms:</span>\n          <span class=\"value\">{{lodging.rooms}}</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Balconies:</span>\n          <span class=\"value\">{{lodging.balconies}}</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Halls:</span>\n          <span class=\"value\">{{lodging.halls}}</span>\n        </div>\n        <div class=\"col-6 col-md-4 mb-3\">\n          <span class=\"name\">Flooring:</span>\n          <span class=\"value\">{{flooring}}</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"box mt-4 p-3\" *ngIf=\"lodging.additional_details.length > 0\">\n      <h2><fa-icon [icon]=\"['fas', 'info-circle']\" class=\"mr-2\"></fa-icon> Additional details</h2>\n      <div>{{lodging.additional_details}}</div>\n    </div>\n    <div class=\"box mt-4 p-3\" *ngIf=\"lodging.posted_by\">\n      <h2><fa-icon [icon]=\"['fas', 'address-book']\" class=\"mr-2\"></fa-icon> Contact Details</h2>\n      <div class=\"mb-3\">\n        <span class=\"name\">Address: </span>\n        <span class=\"value\">{{lodging.address}}</span>\n      </div>\n      <div>\n        <span class=\"name\">Phone numbers: </span>\n        <span class=\"value\">{{phoneNumbers}}</span>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-12 col-md-4\">\n    <div class=\"box p-3 mt-4 mt-md-0\">\n      <h2><fa-icon [icon]=\"['fas', 'money-bill']\" class=\"mr-2\"></fa-icon> All Charges</h2>\n      <div class=\"row mb-3\" *ngFor=\"let charge of charges\">\n        <span class=\"col name\">{{charge.text}}</span>\n        <span class=\"col value\">\n          <fa-icon [icon]=\"['fas', 'rupee-sign']\"></fa-icon>{{charge.amount}} ({{charge.is_per_month ? 'per month' : 'one time'}})\n        </span>\n      </div>\n      <hr>\n      <div class=\"row mb-3\">\n        <span class=\"col name\">Rent on first month</span>\n        <span class=\"col value\">\n          <fa-icon [icon]=\"['fas', 'rupee-sign']\"></fa-icon>{{firstMonthRent}}\n        </span>\n      </div>\n      <div class=\"row mb-3\">\n        <span class=\"col name\">Rent from second month onwards</span>\n        <span class=\"col value\">\n          <fa-icon [icon]=\"['fas', 'rupee-sign']\"></fa-icon>{{oneMonthRent}}\n        </span>\n      </div>\n      <hr>\n      <div class=\"row mb-3\">\n        <span class=\"col name\"><b>Booking amount</b> ({{brokerage}}% brokerage + {{advanceRent}}% rent)</span>\n        <span class=\"col value\">\n          <fa-icon [icon]=\"['fas', 'rupee-sign']\"></fa-icon>{{bookingAmt}}\n        </span>\n      </div>\n    </div>\n    <div class=\"box p-3 mt-4\" *ngIf=\"lodging.agreement && !needToConfirm\">\n      <h2><fa-icon [icon]=\"['fas', 'handshake']\" class=\"mr-2\"></fa-icon> Agreement</h2>\n      <mat-list role=\"list\">\n        <mat-list-item role=\"listitem\" *ngFor=\"let point of lodging.agreement.points\">\n          {{point.text}}</mat-list-item>\n      </mat-list>\n      <hr>\n      <mat-checkbox [(ngModel)]=\"agreeToTandC\" (ngModelChange)=\"onAgreementChange($event)\" color=\"primary\">\n        I agree to above terms and conditions of owner.</mat-checkbox>\n      <mat-error class=\"d-block\">{{agreementError}}</mat-error>\n    </div>\n    <div *ngIf=\"!lodging.posted_by && me?.user_type == 'tenant'\" class=\"mt-4\">\n      <div *ngIf=\"lodging.is_booked || lodging.isHidden; else loginTestConfirmAndBook\">\n        <button class=\"w-100\" type=\"button\" disabled>Already booked</button>\n      </div>\n      <ng-template #loginTestConfirmAndBook>\n        <div *ngIf=\"!isLoggedIn; else testConfirmAndBook\">\n          <button class=\"w-100\" mat-raised-button color=\"primary\" [routerLink]=\"['/user/login']\" type=\"button\">\n            <i class=\"fas fa-lock\"></i> Login to book\n          </button>\n        </div>\n        <ng-template #testConfirmAndBook>\n          <div *ngIf=\"env.pre_release_test; else confirmAndBook\">\n            <button class=\"w-100\" mat-raised-button color=\"accent\" type=\"button\">Book now</button>\n          </div>\n          <ng-template #confirmAndBook>\n            <div *ngIf=\"needToConfirm; else book\">\n              <button class=\"w-100\" mat-raised-button color=\"primary\" (click)=\"confirmVaccant()\" type=\"button\">Confirm vaccant</button>\n              <small class=\"help-text\">Confirming vaccancy before booking is required. We will send an sms to your number after confirmation for further steps.</small>\n            </div>\n            <ng-template #book>\n              <div>\n                <button class=\"w-100\" mat-raised-button color=\"accent\" (click)=\"bookLodging()\" type=\"button\">Book now</button>\n                <small class=\"help-text\">({{brokerage}}% brokerage + {{advanceRent}}% rent) Rent will be paid to owner on you behalf\n                  and brokerage will be kept with us.</small>\n              </div>\n            </ng-template>\n          </ng-template>\n        </ng-template>\n      </ng-template>\n    </div>\n  </div>\n</div>"],"sourceRoot":"webpack:///"}