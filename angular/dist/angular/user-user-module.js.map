{"version":3,"sources":["./src/app/user/components/profile/profile.component.ts","./src/app/user/components/profile/profile.component.html","./src/app/user/components/signin/signin.component.ts","./src/app/user/components/signin/signin.component.html","./src/app/user/components/signup/signup.component.ts","./src/app/user/components/signup/signup.component.html","./src/app/user/components/verifynumber/verify.component.ts","./src/app/user/components/verifynumber/verify.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\n\nimport { EventService } from '../../../shared/services/event.service';\nimport { UserService } from '../../services/user.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnDestroy {\n  public me;\n  public errors = [];\n  public profileForm = this.fb.group({\n    name: ['', Validators.required],\n    tnc: [''],\n    mobile_numbers: this.fb.array([])\n  });\n  private subs = new Subscription();\n\n  get numbers(): FormArray {\n    return this.profileForm.get('mobile_numbers') as FormArray;\n  }\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private eventService: EventService,\n    private fb: FormBuilder\n  ) {\n    this.subs.add(this.eventService.user$.subscribe((user) => {\n      if (!user) {\n        this.router.navigateByUrl('/user/signin');\n      }\n      user.name = `${user.first_name} ${user.last_name}`;\n      if (!this.me) {\n        this.me = user;\n        this.profileForm.patchValue(this.me);\n        for (let mobile_number of this.me.mobile_numbers) {\n          this.numbers.push(fb.control(mobile_number, [Validators.pattern('^[9876]{1}[0-9]{9}$'), Validators.required]));\n        }\n      }\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  public addNumber(): void {\n    this.numbers.push(this.fb.control('', [Validators.pattern('^[9876]{1}[0-9]{9}$'), Validators.required]));\n  }\n\n  public removeNumber(index): void {\n    this.numbers.removeAt(index);\n  }\n\n  updateProfile(): void {\n    this.userService.updateProfile(this.profileForm.value).subscribe((res) => {\n      this.me = res.user;\n    }, (res) => {\n      this.errors = res.error;\n    });\n  }\n}\n","<mat-card class=\"signup\" *ngIf=\"me\">\n  <mat-card-header>\n    <mat-card-title>My Profile</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"content\">\n    <div class=\"errors\" *ngIf=\"errors.length > 0\">\n      <mat-error *ngFor=\"let error of errors\">{{error}}</mat-error>\n    </div>\n\n    <mat-form-field class=\"email\">\n      <mat-label>Email</mat-label>\n      <input readonly\n        type=\"email\"\n        matInput name=\"email\"\n        [value]=\"me.email\">\n    </mat-form-field>\n\n    <mat-form-field class=\"number\">\n      <mat-label>Mobile number</mat-label>\n      <input readonly\n        matInput name=\"number\"\n        [value]=\"me.mobile_number\">\n    </mat-form-field>\n\n    <form class=\"signup-form\" [formGroup]=\"profileForm\">\n      <mat-form-field class=\"name\">\n        <mat-label>Name</mat-label>\n        <input matInput name=\"name\" formControlName=\"name\">\n      </mat-form-field>\n\n      <mat-form-field class=\"tnc\">\n        <mat-label>Terms & conditions</mat-label>\n        <input matInput name=\"tnc\" formControlName=\"tnc\">\n      </mat-form-field>\n\n      <div formArrayName=\"mobile_numbers\">\n        <mat-form-field *ngFor=\"let number of numbers.controls; let i = index\" class=\"number\">\n          <mat-label>Alternate number</mat-label>\n          <input matInput name=\"number\" [formControlName]=\"i\">\n          <button mat-icon-button matSuffix matTooltip=\"Remove\" (click)=\"removeNumber(i)\">\n            <i class=\"fa fa-times-circle text-danger\"></i>\n          </button>\n        </mat-form-field>\n      </div>\n\n      <button mat-raised-button\n        (click)=\"addNumber()\"\n        color=\"accent\" *ngIf=\"numbers.length < 2\"\n      >Add alternate number</button>\n    </form>\n\n  </mat-card-content>\n  <mat-card-footer class=\"footer\">\n    <button mat-raised-button\n      [disabled]=\"!profileForm.valid\"\n      class=\"signup-button\"\n      color=\"primary\"\n      (click)=\"updateProfile()\"\n    >Save</button>\n  </mat-card-footer>\n</mat-card>\n","import { Component } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../services/user.service';\n\n\n@Component({\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class UserSigninComponent {\n  public user = {\n    username: '',\n    password: ''\n  };\n\n  public errors = [];\n\n  constructor(\n    private userService: UserService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {\n  }\n\n  login(): any {\n    this.errors = [];\n    this.userService.login(this.user).subscribe((data) => {\n      this.router.navigateByUrl('/');\n    }, (res) => {\n      this.errors = res.error ? res.error : [];\n    });\n  }\n}\n","<mat-card class=\"signup\">\n  <mat-card-header>\n    <mat-card-title>Sign In</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"content\">\n    <div class=\"errors\" *ngIf=\"errors.length > 0\">\n      <mat-error *ngFor=\"let error of errors\">{{error}}</mat-error>\n    </div>\n    <form class=\"signup-form\" #signinForm=\"ngForm\">\n      <mat-form-field class=\"name\">\n        <mat-label>Mobile number or Email</mat-label>\n        <input required\n          matInput name=\"name\"\n          [(ngModel)]=\"user.username\"\n          #name=\"ngModel\">\n      </mat-form-field>\n\n      <mat-form-field class=\"email\">\n        <mat-label>Password</mat-label>\n        <input required\n          type=\"password\"\n          matInput name=\"password\"\n          [(ngModel)]=\"user.password\"\n          #password=\"ngModel\">\n      </mat-form-field>\n    </form>\n  </mat-card-content>\n  <mat-card-footer class=\"footer\">\n    <button mat-raised-button\n      [disabled]=\"!signinForm.valid\"\n      class=\"signup-button\"\n      color=\"primary\"\n      (click)=\"login()\"\n    >Sign In</button>\n    <a class=\"forgot-password\" routerLink=\"../forgot-password\">\n      Forgot Password?\n    </a>\n  </mat-card-footer>\n</mat-card>\n","import { Component } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../services/user.service';\n\n\n@Component({\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class UserSignupComponent {\n  public user = {\n    name: '',\n    number: '',\n    email: '',\n    password: ''\n  };\n\n  public errors = [];\n\n  constructor(\n    private userService: UserService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {\n\n  }\n\n  register(): any {\n    this.errors = [];\n    this.userService.register(this.user).subscribe(() => {\n      this.router.navigateByUrl('/user/verify-number');\n    }, (res) => {\n      this.errors = res.error;\n    });\n  }\n}\n","<mat-card class=\"signup\">\n  <mat-card-header>\n    <mat-card-title>Sign Up</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"content\">\n    <div class=\"errors\" *ngIf=\"errors.length > 0\">\n      <mat-error *ngFor=\"let error of errors\">{{error}}</mat-error>\n    </div>\n    <form class=\"signup-form\" #signupForm=\"ngForm\">\n      <mat-form-field class=\"name\">\n        <mat-label>Name</mat-label>\n        <input required\n          matInput name=\"name\"\n          [(ngModel)]=\"user.name\"\n          #name=\"ngModel\">\n      </mat-form-field>\n\n      <mat-form-field class=\"email\">\n        <mat-label>Email</mat-label>\n        <input required\n          type=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          matInput name=\"email\"\n          [(ngModel)]=\"user.email\"\n          #email=\"ngModel\">\n      </mat-form-field>\n\n      <mat-form-field class=\"email\">\n        <mat-label>Password</mat-label>\n        <input required\n          type=\"password\"\n          matInput name=\"password\"\n          [(ngModel)]=\"user.password\"\n          #password=\"ngModel\">\n      </mat-form-field>\n\n      <mat-form-field class=\"email\">\n        <mat-label>Mobile number</mat-label>\n        <input required\n          matInput name=\"number\"\n          [(ngModel)]=\"user.number\"\n          pattern=\"[9876]{1}[0-9]{9}\"\n          #number=\"ngModel\">\n      </mat-form-field>\n    </form>\n  </mat-card-content>\n  <mat-card-footer class=\"footer\">\n    <button mat-raised-button\n      [disabled]=\"!signupForm.valid\"\n      class=\"signup-button\"\n      color=\"primary\"\n      (click)=\"register()\"\n    >Sign Up</button>\n    <div class=\"signedup\">\n      Already registered?\n      <button mat-raised-button\n        color=\"primary\"\n        routerLink=\"../signin\"\n      >Sign In</button>\n    </div>\n  </mat-card-footer>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { EventService } from 'src/app/shared/services/event.service';\nimport { UserService } from '../../services/user.service';\n\n\n@Component({\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.scss']\n})\nexport class VerifyNumberComponent {\n  public userOtp = '';\n  public otpSent = false;\n  public numberVerified = false;\n  public errors = [];\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private eventService: EventService\n  ) {\n    this.eventService.user$.subscribe((user) => {\n      if (!user) {\n        this.router.navigateByUrl('/user/signin');\n      }\n      if (user.is_verified) {\n        this.numberVerified = true;\n      } else {\n        this.userService.sendOtpToNumber().subscribe(() => {\n          this.otpSent = true;\n        }, (res) => {\n          this.errors = res.error;\n        });\n      }\n    });\n  }\n\n  verify(): any {\n    this.errors = [];\n    this.userService.verifyNumber(this.userOtp).subscribe((data) => {\n      this.numberVerified = true;\n    }, (res) => {\n      this.errors = res.error;\n    });\n  }\n}\n","<mat-card class=\"signup\" *ngIf=\"!numberVerified\">\n  <mat-card-header>\n    <mat-card-title>Verify</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"content\">\n    <div class=\"errors\" *ngIf=\"errors.length > 0\">\n      <mat-error *ngFor=\"let error of errors\">{{error}}</mat-error>\n    </div>\n    <form class=\"signup-form\" #verifyForm=\"ngForm\">\n      <mat-form-field class=\"name\">\n        <mat-label>OTP</mat-label>\n        <input required\n          matInput name=\"name\"\n          [(ngModel)]=\"userOtp\"\n          pattern=\"[0-9]{4,6}\"\n          #name=\"ngModel\">\n        <mat-hint>OTP will expire in 5 minutes</mat-hint>\n      </mat-form-field>\n    </form>\n  </mat-card-content>\n  <mat-card-footer class=\"footer\">\n    <button mat-raised-button\n      [disabled]=\"!verifyForm.valid\"\n      class=\"signup-button\"\n      color=\"primary\"\n      (click)=\"verify()\"\n    >Verify</button>\n  </mat-card-footer>\n</mat-card>\n<div class=\"number-verified\" *ngIf=\"numberVerified\">\n  <i class=\"fa fa-check-circle\"></i>\n  <span>You have verified your number</span>\n  <a class=\"gotohome\" routerLink=\"/\">\n    Go to home\n  </a>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserSigninComponent } from './components/signin/signin.component';\nimport { UserSignupComponent } from './components/signup/signup.component';\nimport { VerifyNumberComponent } from './components/verifynumber/verify.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nconst routes: Routes = [\n  { path: 'signin', component: UserSigninComponent },\n  { path: 'signup', component: UserSignupComponent },\n  { path: 'verify-number', component: VerifyNumberComponent },\n  { path: 'profile', component: ProfileComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserSigninComponent } from './components/signin/signin.component';\nimport { UserSignupComponent } from './components/signup/signup.component';\nimport { VerifyNumberComponent } from './components/verifynumber/verify.component';\nimport { UserService } from './services/user.service';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n@NgModule({\n  declarations: [\n    UserSigninComponent,\n    UserSignupComponent,\n    VerifyNumberComponent,\n    ProfileComponent\n  ],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDividerModule,\n    FormsModule,\n    MatSnackBarModule,\n    UserRoutingModule,\n    ReactiveFormsModule,\n    MatTooltipModule\n  ],\n  providers: [\n    UserService\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///"}